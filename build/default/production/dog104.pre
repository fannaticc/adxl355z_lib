
# 1 "dog104.c"

# 13 "C:\Program Files (x86)\Microchip\xc8\v1.40\include\stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 12 "C:\Program Files (x86)\Microchip\xc8\v1.40\include\stdbool.h"
typedef unsigned char bool;

# 71 "dog104.h"
void initDispl(void);
void WriteChar(int8_t character);
void WriteString(int8_t *stringi);
void SetPostion(int8_t pos);
void DisplayOnOff(int8_t data);
void DefineCharacter(uint8_t postion, uint8_t *data);
void ClrDisplay(void);
void SetContrast(uint8_t contr);
void SetView(uint8_t view);
void SetROM(uint8_t value);
void DisplLines(uint8_t lines);




void WriteIns(int8_t ins);
void WriteData(int8_t data);

uint8_t CheckBusy(void);
void IIC_put(uint8_t cb, uint8_t db);
static uint8_t IIC_get(void);

# 14 "my_i2c.h"
unsigned char I2C_ReadByte(unsigned char acknowledge);
unsigned char I2C_WriteByte(unsigned char data_out);

void I2C_Init(unsigned char clock_output);
void I2C_Start(void);
void I2C_RepeatedStart(void);
void I2C_Stop(void);
void I2C_Idle(void);
void I2C_Close(void);

# 16 "dog104.c"
unsigned char dh_function_set = 0x38;




void Wait (uint8_t waitstates)
{
uint8_t i = 0;
for (i = 0; i < waitstates; i++)
{
asm("NOP");
}
}

# 34
void initDispl(void)
{
uint8_t i;

# 45
WriteIns(0x3A);
WriteIns(0x09);

WriteIns(0x06);

# 53
WriteIns(0x1E);
WriteIns(0x39);
WriteIns(0x1B);
WriteIns(0x6E);
WriteIns(0x56);
WriteIns(0x7A);
WriteIns(dh_function_set);

ClrDisplay();
DisplayOnOff(0x04 | 0x02 | 0x01);
}

# 69
void WriteChar(int8_t character)
{
WriteData(character);
}

# 78
void WriteString(int8_t *stringi)
{
do
{
WriteData(*stringi++);
}
while(*stringi);
}

# 91
void DisplLines(uint8_t lines)
{
if(lines == 0x38)
{
WriteIns(lines);
dh_function_set = 0x38;
}
else
{
WriteIns(0x3C);
WriteIns(0x3A);
WriteIns(lines);
WriteIns(0x3C);
dh_function_set = 0x3C;
}
}

# 112
void SetPostion(int8_t pos)
{
WriteIns(0x80 + pos);
}

# 121
void DisplayOnOff(int8_t data)
{
WriteIns(0x08 + data);
}

# 130
void DefineCharacter(uint8_t postion, uint8_t *data)
{
uint8_t i = 0;
WriteIns(0x40 + 8 * postion);

for (i = 0; i < 8; i++)
{
WriteData(data[i]);
}
SetPostion(0);
}

# 146
void ClrDisplay(void)
{
WriteIns(0x01);
SetPostion(0);
}

# 156
void SetContrast(uint8_t contr)
{
WriteIns(0x39);
WriteIns(0x54 | (contr >> 4));
WriteIns(0x70 | (contr & 0x0F));
WriteIns(dh_function_set);
}

# 168
void SetView(uint8_t view)
{
WriteIns(0x3A);
WriteIns(view);
WriteIns(dh_function_set);
}

# 179
void SetROM(uint8_t value)
{
WriteIns(0x2A);
WriteIns(0x72);
WriteData(value);
WriteIns(0x28);
}

# 191
void WriteIns(int8_t ins)
{
while(CheckBusy() == 1);
IIC_put(0x80, ins);
}

# 201
void WriteData(int8_t data)
{
while(CheckBusy() == 1);
IIC_put(0x40, data);
}

# 211
uint8_t CheckBusy(void)
{
return (IIC_get() & 0x80);
}

# 221
void IIC_put(uint8_t cb, uint8_t db)
{
I2C_Start();
I2C_WriteByte(0x78);
I2C_WriteByte(cb);
I2C_WriteByte(db);
I2C_Stop();
}

# 234
static uint8_t IIC_get(void)
{
uint8_t ret;

I2C_Start();
I2C_WriteByte(0x78);
I2C_WriteByte(0x80);
I2C_RepeatedStart();
I2C_WriteByte(0x78 + 1);
ret = I2C_ReadByte(0);
I2C_Stop();

return ret;
}
